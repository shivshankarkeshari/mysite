# git checkout for_deployment

# git push -f heroku for_deployment:master

# git
#
#
#
# // Add button
# var button1 = chart.chartContainer.createChild(am4core.Button);
# button1.padding(0, 0, 0, 0);
# button1.width = 50;
# button1.align = "left";
# button1.marginLeft = 10;
#
# button1.icon = new am4core.Sprite();
# button1.fill = '#dc3545';
# button1.icon.path = "M32 2a22 22 0 0 0-6 43.1L32 62l6-16.8A22 22 0 0 0 32 2zm0 34a12 12 0 1 1 12-12 12 12 0 0 1-12 12z";
#
# button1.events.on("hit", function() {
#   for (i = 0; i < b.length; i++) {
# <!--    console.log(b[i]['latitude']);-->
#   var marker = imageSeries.mapImages.create();
#   marker.latitude = parseFloat(b[i]['latitude']);
#   marker.longitude = parseFloat(b[i]['longitude']);
# }
#
# });
from django.db import models


class Users1(models.Model):
    name = models.CharField()


COLORS = [('1', 'red'),
          ('2', 'blue'),
          ('3', 'Yellow')]


class station(models.Model):
    color = models.CharField(ChoiceField=COLORS)
    name = models.CharField()
    lat = models.DecimalField()
    lng = models.DecimalField()


class TrainData(models.Model):
    train_no = models.IntegerField()
    train_route_details = ArrayField(models.ForignKey(LocationList))


class UserTravelDetails:
    def __init__(self, function):
        self.route_string = route_string

    usr = models.ForignKey(Users)
    start_station_id = models.ForignKey(station)
    destination_station_id = models.ForignKey(station)
    route_string = models.CharField(Default="ok")

    def __call__(self):
        self.route_string(self)


def route_string(user):
    start_station = user.start_station_id
    destination_station = user.destination_station_id

    # A and C both on same color
    # A-->C

    if start_station.color == destination_station.color:
        user.route_string = f"{start_station.name}---> {destination_station.name}"
    else:
        # A---> D---> C

        color1_objects = [i.name for i in station.objects.all().filter(color=start_station.color)]
        color2_objects = [i.name for i in station.objects.all().filter(color=destination_station.color)]
        junction_station = [i for i, j in zip(color1_objects, color2_objects) if i == j]
        if junction_station:
            user.route_string = f"{start_station}--> {junction_station}--> {destination_station}"
        else:
            # remaining_color_list =
            pass
        # A---> B---> D---> C

